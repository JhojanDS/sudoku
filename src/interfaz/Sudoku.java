/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaz;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Stack;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import modelo.Accion;

/**
 *
 * @author JhojanDS
 */
public class Sudoku extends javax.swing.JFrame {

    private String archivoConfigPartida;
    private String archivoRespuesta;
    private Stack<Accion> deshacer;
    private Stack<Accion> rehacer;
    private String sudokuPartida[][];
    private List<String> historial;

    public Sudoku() {
        this.archivoConfigPartida = "configuracionPartida.txt";
        this.archivoRespuesta = "respuestaPartida.txt";
        this.deshacer = new Stack<Accion>();
        this.rehacer = new Stack<Accion>();
        this.sudokuPartida = new String[9][9];
        this.historial = new ArrayList<String>();
        initComponents();
        establecerPartida();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonSalir = new javax.swing.JButton();
        jButtonVerJugadas = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanelSudoku = new javax.swing.JPanel();
        jPanelRegion1 = new javax.swing.JPanel();
        jText1Region1 = new javax.swing.JTextField();
        jText2Region1 = new javax.swing.JTextField();
        jText3Region1 = new javax.swing.JTextField();
        jText4Region1 = new javax.swing.JTextField();
        jText5Region1 = new javax.swing.JTextField();
        jText6Region1 = new javax.swing.JTextField();
        jText7Region1 = new javax.swing.JTextField();
        jText8Region1 = new javax.swing.JTextField();
        jText9Region1 = new javax.swing.JTextField();
        jPanelRegion2 = new javax.swing.JPanel();
        jText1Region2 = new javax.swing.JTextField();
        jText2Region2 = new javax.swing.JTextField();
        jText3Region2 = new javax.swing.JTextField();
        jText4Region2 = new javax.swing.JTextField();
        jText5Region2 = new javax.swing.JTextField();
        jText6Region2 = new javax.swing.JTextField();
        jText7Region2 = new javax.swing.JTextField();
        jText8Region2 = new javax.swing.JTextField();
        jText9Region2 = new javax.swing.JTextField();
        jPanelRegion3 = new javax.swing.JPanel();
        jText1Region3 = new javax.swing.JTextField();
        jText2Region3 = new javax.swing.JTextField();
        jText3Region3 = new javax.swing.JTextField();
        jText4Region3 = new javax.swing.JTextField();
        jText5Region3 = new javax.swing.JTextField();
        jText6Region3 = new javax.swing.JTextField();
        jText7Region3 = new javax.swing.JTextField();
        jText8Region3 = new javax.swing.JTextField();
        jText9Region3 = new javax.swing.JTextField();
        jPanelRegion4 = new javax.swing.JPanel();
        jText1Region4 = new javax.swing.JTextField();
        jText2Region4 = new javax.swing.JTextField();
        jText3Region4 = new javax.swing.JTextField();
        jText4Region4 = new javax.swing.JTextField();
        jText5Region4 = new javax.swing.JTextField();
        jText6Region4 = new javax.swing.JTextField();
        jText7Region4 = new javax.swing.JTextField();
        jText8Region4 = new javax.swing.JTextField();
        jText9Region4 = new javax.swing.JTextField();
        jPanelRegion5 = new javax.swing.JPanel();
        jText1Region5 = new javax.swing.JTextField();
        jText2Region5 = new javax.swing.JTextField();
        jText3Region5 = new javax.swing.JTextField();
        jText4Region5 = new javax.swing.JTextField();
        jText5Region5 = new javax.swing.JTextField();
        jText6Region5 = new javax.swing.JTextField();
        jText7Region5 = new javax.swing.JTextField();
        jText8Region5 = new javax.swing.JTextField();
        jText9Region5 = new javax.swing.JTextField();
        jPanelRegion6 = new javax.swing.JPanel();
        jText1Region6 = new javax.swing.JTextField();
        jText2Region6 = new javax.swing.JTextField();
        jText3Region6 = new javax.swing.JTextField();
        jText4Region6 = new javax.swing.JTextField();
        jText5Region6 = new javax.swing.JTextField();
        jText6Region6 = new javax.swing.JTextField();
        jText7Region6 = new javax.swing.JTextField();
        jText8Region6 = new javax.swing.JTextField();
        jText9Region6 = new javax.swing.JTextField();
        jPanelRegion7 = new javax.swing.JPanel();
        jText1Region7 = new javax.swing.JTextField();
        jText2Region7 = new javax.swing.JTextField();
        jText3Region7 = new javax.swing.JTextField();
        jText4Region7 = new javax.swing.JTextField();
        jText5Region7 = new javax.swing.JTextField();
        jText6Region7 = new javax.swing.JTextField();
        jText7Region7 = new javax.swing.JTextField();
        jText8Region7 = new javax.swing.JTextField();
        jText9Region7 = new javax.swing.JTextField();
        jPanelRegion8 = new javax.swing.JPanel();
        jText1Region8 = new javax.swing.JTextField();
        jText2Region8 = new javax.swing.JTextField();
        jText3Region8 = new javax.swing.JTextField();
        jText4Region8 = new javax.swing.JTextField();
        jText5Region8 = new javax.swing.JTextField();
        jText6Region8 = new javax.swing.JTextField();
        jText7Region8 = new javax.swing.JTextField();
        jText8Region8 = new javax.swing.JTextField();
        jText9Region8 = new javax.swing.JTextField();
        jPanelRegion9 = new javax.swing.JPanel();
        jText1Region9 = new javax.swing.JTextField();
        jText2Region9 = new javax.swing.JTextField();
        jText3Region9 = new javax.swing.JTextField();
        jText4Region9 = new javax.swing.JTextField();
        jText5Region9 = new javax.swing.JTextField();
        jText6Region9 = new javax.swing.JTextField();
        jText7Region9 = new javax.swing.JTextField();
        jText8Region9 = new javax.swing.JTextField();
        jText9Region9 = new javax.swing.JTextField();
        jPanelOpciones = new javax.swing.JPanel();
        jButtonDeshacer = new javax.swing.JButton();
        jButtonComprobar = new javax.swing.JButton();
        jButtonRehacer = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("SUDOKU");

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jButtonVerJugadas.setText("Ver jugadas");
        jButtonVerJugadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerJugadasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jButtonVerJugadas)
                .addGap(153, 153, 153)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSalir)
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonSalir)
                    .addComponent(jButtonVerJugadas))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanelSudoku.setBackground(new java.awt.Color(255, 255, 255));
        jPanelSudoku.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), null));

        jText1Region1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText1Region1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText1Region1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText1Region1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText1Region1KeyTyped(evt);
            }
        });

        jText2Region1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText2Region1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText2Region1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText2Region1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText2Region1KeyTyped(evt);
            }
        });

        jText3Region1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText3Region1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText3Region1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText3Region1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText3Region1KeyTyped(evt);
            }
        });

        jText4Region1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText4Region1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText4Region1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText4Region1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText4Region1KeyTyped(evt);
            }
        });

        jText5Region1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText5Region1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText5Region1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText5Region1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText5Region1KeyTyped(evt);
            }
        });

        jText6Region1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText6Region1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText6Region1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText6Region1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText6Region1KeyTyped(evt);
            }
        });

        jText7Region1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText7Region1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText7Region1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText7Region1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText7Region1KeyTyped(evt);
            }
        });

        jText8Region1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText8Region1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText8Region1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText8Region1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText8Region1KeyTyped(evt);
            }
        });

        jText9Region1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText9Region1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText9Region1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText9Region1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText9Region1KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelRegion1Layout = new javax.swing.GroupLayout(jPanelRegion1);
        jPanelRegion1.setLayout(jPanelRegion1Layout);
        jPanelRegion1Layout.setHorizontalGroup(
            jPanelRegion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion1Layout.createSequentialGroup()
                .addComponent(jText1Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText2Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText3Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion1Layout.createSequentialGroup()
                .addComponent(jText4Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText5Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText6Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion1Layout.createSequentialGroup()
                .addComponent(jText7Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText8Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText9Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelRegion1Layout.setVerticalGroup(
            jPanelRegion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion1Layout.createSequentialGroup()
                .addGroup(jPanelRegion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText1Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText2Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText3Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText4Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText5Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText6Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText7Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText8Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText9Region1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelRegion2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jText1Region2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText1Region2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText1Region2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText1Region2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText1Region2KeyTyped(evt);
            }
        });

        jText2Region2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText2Region2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText2Region2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText2Region2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText2Region2KeyTyped(evt);
            }
        });

        jText3Region2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText3Region2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText3Region2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText3Region2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText3Region2KeyTyped(evt);
            }
        });

        jText4Region2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText4Region2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText4Region2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText4Region2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText4Region2KeyTyped(evt);
            }
        });

        jText5Region2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText5Region2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText5Region2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText5Region2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText5Region2KeyTyped(evt);
            }
        });

        jText6Region2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText6Region2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText6Region2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText6Region2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText6Region2KeyTyped(evt);
            }
        });

        jText7Region2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText7Region2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText7Region2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText7Region2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText7Region2KeyTyped(evt);
            }
        });

        jText8Region2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText8Region2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText8Region2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText8Region2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText8Region2KeyTyped(evt);
            }
        });

        jText9Region2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText9Region2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText9Region2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText9Region2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText9Region2KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelRegion2Layout = new javax.swing.GroupLayout(jPanelRegion2);
        jPanelRegion2.setLayout(jPanelRegion2Layout);
        jPanelRegion2Layout.setHorizontalGroup(
            jPanelRegion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion2Layout.createSequentialGroup()
                .addComponent(jText1Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText2Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText3Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion2Layout.createSequentialGroup()
                .addComponent(jText4Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText5Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText6Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion2Layout.createSequentialGroup()
                .addComponent(jText7Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText8Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText9Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelRegion2Layout.setVerticalGroup(
            jPanelRegion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion2Layout.createSequentialGroup()
                .addGroup(jPanelRegion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText1Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText2Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText3Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText4Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText5Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText6Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText7Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText8Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText9Region2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jText1Region3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText1Region3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText1Region3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText1Region3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText1Region3KeyTyped(evt);
            }
        });

        jText2Region3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText2Region3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText2Region3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText2Region3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText2Region3KeyTyped(evt);
            }
        });

        jText3Region3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText3Region3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText3Region3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText3Region3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText3Region3KeyTyped(evt);
            }
        });

        jText4Region3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText4Region3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText4Region3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText4Region3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText4Region3KeyTyped(evt);
            }
        });

        jText5Region3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText5Region3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText5Region3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText5Region3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText5Region3KeyTyped(evt);
            }
        });

        jText6Region3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText6Region3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText6Region3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText6Region3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText6Region3KeyTyped(evt);
            }
        });

        jText7Region3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText7Region3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText7Region3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText7Region3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText7Region3KeyTyped(evt);
            }
        });

        jText8Region3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText8Region3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText8Region3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText8Region3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText8Region3KeyTyped(evt);
            }
        });

        jText9Region3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText9Region3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText9Region3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText9Region3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText9Region3KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelRegion3Layout = new javax.swing.GroupLayout(jPanelRegion3);
        jPanelRegion3.setLayout(jPanelRegion3Layout);
        jPanelRegion3Layout.setHorizontalGroup(
            jPanelRegion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion3Layout.createSequentialGroup()
                .addComponent(jText1Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText2Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText3Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion3Layout.createSequentialGroup()
                .addComponent(jText4Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText5Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText6Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion3Layout.createSequentialGroup()
                .addComponent(jText7Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText8Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText9Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelRegion3Layout.setVerticalGroup(
            jPanelRegion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion3Layout.createSequentialGroup()
                .addGroup(jPanelRegion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText1Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText2Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText3Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText4Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText5Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText6Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText7Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText8Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText9Region3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelRegion4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jText1Region4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText1Region4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText1Region4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText1Region4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText1Region4KeyTyped(evt);
            }
        });

        jText2Region4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText2Region4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText2Region4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText2Region4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText2Region4KeyTyped(evt);
            }
        });

        jText3Region4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText3Region4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText3Region4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText3Region4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText3Region4KeyTyped(evt);
            }
        });

        jText4Region4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText4Region4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText4Region4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText4Region4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText4Region4KeyTyped(evt);
            }
        });

        jText5Region4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText5Region4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText5Region4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText5Region4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText5Region4KeyTyped(evt);
            }
        });

        jText6Region4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText6Region4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText6Region4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText6Region4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText6Region4KeyTyped(evt);
            }
        });

        jText7Region4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText7Region4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText7Region4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText7Region4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText7Region4KeyTyped(evt);
            }
        });

        jText8Region4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText8Region4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText8Region4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText8Region4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText8Region4KeyTyped(evt);
            }
        });

        jText9Region4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText9Region4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText9Region4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText9Region4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText9Region4KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelRegion4Layout = new javax.swing.GroupLayout(jPanelRegion4);
        jPanelRegion4.setLayout(jPanelRegion4Layout);
        jPanelRegion4Layout.setHorizontalGroup(
            jPanelRegion4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion4Layout.createSequentialGroup()
                .addComponent(jText1Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText2Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText3Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion4Layout.createSequentialGroup()
                .addComponent(jText4Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText5Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText6Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion4Layout.createSequentialGroup()
                .addComponent(jText7Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText8Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText9Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelRegion4Layout.setVerticalGroup(
            jPanelRegion4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion4Layout.createSequentialGroup()
                .addGroup(jPanelRegion4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText1Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText2Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText3Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText4Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText5Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText6Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText7Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText8Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText9Region4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelRegion5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jText1Region5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText1Region5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText1Region5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText1Region5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText1Region5KeyTyped(evt);
            }
        });

        jText2Region5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText2Region5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText2Region5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText2Region5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText2Region5KeyTyped(evt);
            }
        });

        jText3Region5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText3Region5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText3Region5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText3Region5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText3Region5KeyTyped(evt);
            }
        });

        jText4Region5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText4Region5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText4Region5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText4Region5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText4Region5KeyTyped(evt);
            }
        });

        jText5Region5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText5Region5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText5Region5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText5Region5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText5Region5KeyTyped(evt);
            }
        });

        jText6Region5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText6Region5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText6Region5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText6Region5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText6Region5KeyTyped(evt);
            }
        });

        jText7Region5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText7Region5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText7Region5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText7Region5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText7Region5KeyTyped(evt);
            }
        });

        jText8Region5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText8Region5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText8Region5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText8Region5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText8Region5KeyTyped(evt);
            }
        });

        jText9Region5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText9Region5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText9Region5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText9Region5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText9Region5KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelRegion5Layout = new javax.swing.GroupLayout(jPanelRegion5);
        jPanelRegion5.setLayout(jPanelRegion5Layout);
        jPanelRegion5Layout.setHorizontalGroup(
            jPanelRegion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion5Layout.createSequentialGroup()
                .addComponent(jText1Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText2Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText3Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion5Layout.createSequentialGroup()
                .addComponent(jText4Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText5Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText6Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion5Layout.createSequentialGroup()
                .addComponent(jText7Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText8Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText9Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelRegion5Layout.setVerticalGroup(
            jPanelRegion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion5Layout.createSequentialGroup()
                .addGroup(jPanelRegion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText1Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText2Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText3Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText4Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText5Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText6Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText7Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText8Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText9Region5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelRegion6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jText1Region6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText1Region6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText1Region6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText1Region6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText1Region6KeyTyped(evt);
            }
        });

        jText2Region6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText2Region6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText2Region6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText2Region6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText2Region6KeyTyped(evt);
            }
        });

        jText3Region6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText3Region6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText3Region6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText3Region6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText3Region6KeyTyped(evt);
            }
        });

        jText4Region6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText4Region6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText4Region6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText4Region6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText4Region6KeyTyped(evt);
            }
        });

        jText5Region6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText5Region6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText5Region6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText5Region6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText5Region6KeyTyped(evt);
            }
        });

        jText6Region6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText6Region6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText6Region6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText6Region6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText6Region6KeyTyped(evt);
            }
        });

        jText7Region6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText7Region6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText7Region6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText7Region6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText7Region6KeyTyped(evt);
            }
        });

        jText8Region6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText8Region6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText8Region6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText8Region6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText8Region6KeyTyped(evt);
            }
        });

        jText9Region6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText9Region6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText9Region6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText9Region6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText9Region6KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelRegion6Layout = new javax.swing.GroupLayout(jPanelRegion6);
        jPanelRegion6.setLayout(jPanelRegion6Layout);
        jPanelRegion6Layout.setHorizontalGroup(
            jPanelRegion6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion6Layout.createSequentialGroup()
                .addComponent(jText1Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText2Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText3Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion6Layout.createSequentialGroup()
                .addComponent(jText4Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText5Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText6Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion6Layout.createSequentialGroup()
                .addComponent(jText7Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText8Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText9Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelRegion6Layout.setVerticalGroup(
            jPanelRegion6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion6Layout.createSequentialGroup()
                .addGroup(jPanelRegion6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText1Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText2Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText3Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText4Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText5Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText6Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText7Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText8Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText9Region6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jText1Region7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText1Region7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText1Region7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText1Region7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText1Region7KeyTyped(evt);
            }
        });

        jText2Region7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText2Region7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText2Region7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText2Region7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText2Region7KeyTyped(evt);
            }
        });

        jText3Region7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText3Region7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText3Region7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText3Region7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText3Region7KeyTyped(evt);
            }
        });

        jText4Region7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText4Region7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText4Region7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText4Region7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText4Region7KeyTyped(evt);
            }
        });

        jText5Region7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText5Region7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText5Region7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText5Region7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText5Region7KeyTyped(evt);
            }
        });

        jText6Region7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText6Region7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText6Region7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText6Region7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText6Region7KeyTyped(evt);
            }
        });

        jText7Region7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText7Region7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText7Region7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText7Region7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText7Region7KeyTyped(evt);
            }
        });

        jText8Region7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText8Region7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText8Region7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText8Region7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText8Region7KeyTyped(evt);
            }
        });

        jText9Region7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText9Region7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText9Region7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText9Region7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText9Region7KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelRegion7Layout = new javax.swing.GroupLayout(jPanelRegion7);
        jPanelRegion7.setLayout(jPanelRegion7Layout);
        jPanelRegion7Layout.setHorizontalGroup(
            jPanelRegion7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion7Layout.createSequentialGroup()
                .addComponent(jText1Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText2Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText3Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion7Layout.createSequentialGroup()
                .addComponent(jText4Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText5Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText6Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion7Layout.createSequentialGroup()
                .addComponent(jText7Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText8Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText9Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelRegion7Layout.setVerticalGroup(
            jPanelRegion7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion7Layout.createSequentialGroup()
                .addGroup(jPanelRegion7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText1Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText2Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText3Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText4Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText5Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText6Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText7Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText8Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText9Region7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelRegion8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jText1Region8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText1Region8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText1Region8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText1Region8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText1Region8KeyTyped(evt);
            }
        });

        jText2Region8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText2Region8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText2Region8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText2Region8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText2Region8KeyTyped(evt);
            }
        });

        jText3Region8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText3Region8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText3Region8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText3Region8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText3Region8KeyTyped(evt);
            }
        });

        jText4Region8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText4Region8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText4Region8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText4Region8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText4Region8KeyTyped(evt);
            }
        });

        jText5Region8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText5Region8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText5Region8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText5Region8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText5Region8KeyTyped(evt);
            }
        });

        jText6Region8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText6Region8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText6Region8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText6Region8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText6Region8KeyTyped(evt);
            }
        });

        jText7Region8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText7Region8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText7Region8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText7Region8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText7Region8KeyTyped(evt);
            }
        });

        jText8Region8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText8Region8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText8Region8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText8Region8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText8Region8KeyTyped(evt);
            }
        });

        jText9Region8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText9Region8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText9Region8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText9Region8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText9Region8KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelRegion8Layout = new javax.swing.GroupLayout(jPanelRegion8);
        jPanelRegion8.setLayout(jPanelRegion8Layout);
        jPanelRegion8Layout.setHorizontalGroup(
            jPanelRegion8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion8Layout.createSequentialGroup()
                .addComponent(jText1Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText2Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText3Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion8Layout.createSequentialGroup()
                .addComponent(jText4Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText5Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText6Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion8Layout.createSequentialGroup()
                .addComponent(jText7Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText8Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText9Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelRegion8Layout.setVerticalGroup(
            jPanelRegion8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion8Layout.createSequentialGroup()
                .addGroup(jPanelRegion8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText1Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText2Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText3Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText4Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText5Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText6Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText7Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText8Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText9Region8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelRegion9.setPreferredSize(new java.awt.Dimension(104, 106));

        jText1Region9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText1Region9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText1Region9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText1Region9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText1Region9KeyTyped(evt);
            }
        });

        jText2Region9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText2Region9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText2Region9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText2Region9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText2Region9KeyTyped(evt);
            }
        });

        jText3Region9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText3Region9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText3Region9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText3Region9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText3Region9KeyTyped(evt);
            }
        });

        jText4Region9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText4Region9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText4Region9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText4Region9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText4Region9KeyTyped(evt);
            }
        });

        jText5Region9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText5Region9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText5Region9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText5Region9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText5Region9KeyTyped(evt);
            }
        });

        jText6Region9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText6Region9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText6Region9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText6Region9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText6Region9KeyTyped(evt);
            }
        });

        jText7Region9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText7Region9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText7Region9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText7Region9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText7Region9KeyTyped(evt);
            }
        });

        jText8Region9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText8Region9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText8Region9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText8Region9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText8Region9KeyTyped(evt);
            }
        });

        jText9Region9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jText9Region9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jText9Region9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jText9Region9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText9Region9KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelRegion9Layout = new javax.swing.GroupLayout(jPanelRegion9);
        jPanelRegion9.setLayout(jPanelRegion9Layout);
        jPanelRegion9Layout.setHorizontalGroup(
            jPanelRegion9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion9Layout.createSequentialGroup()
                .addComponent(jText1Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText2Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText3Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion9Layout.createSequentialGroup()
                .addComponent(jText4Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText5Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText6Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelRegion9Layout.createSequentialGroup()
                .addComponent(jText7Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText8Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jText9Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelRegion9Layout.setVerticalGroup(
            jPanelRegion9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegion9Layout.createSequentialGroup()
                .addGroup(jPanelRegion9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText1Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText2Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText3Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText4Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText5Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText6Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelRegion9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText7Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText8Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText9Region9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 2, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelSudokuLayout = new javax.swing.GroupLayout(jPanelSudoku);
        jPanelSudoku.setLayout(jPanelSudokuLayout);
        jPanelSudokuLayout.setHorizontalGroup(
            jPanelSudokuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSudokuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSudokuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelSudokuLayout.createSequentialGroup()
                        .addComponent(jPanelRegion4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanelRegion5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelSudokuLayout.createSequentialGroup()
                        .addComponent(jPanelRegion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanelRegion2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelRegion7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelSudokuLayout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jPanelRegion8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0)
                .addGroup(jPanelSudokuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelRegion3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelRegion6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelRegion9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelSudokuLayout.setVerticalGroup(
            jPanelSudokuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSudokuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSudokuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelRegion3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelRegion2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelRegion1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelSudokuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSudokuLayout.createSequentialGroup()
                        .addComponent(jPanelRegion4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanelRegion7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelSudokuLayout.createSequentialGroup()
                        .addComponent(jPanelRegion5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanelRegion8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelSudokuLayout.createSequentialGroup()
                        .addComponent(jPanelRegion6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanelRegion9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(162, Short.MAX_VALUE)
                .addComponent(jPanelSudoku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelSudoku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanelOpciones.setBackground(new java.awt.Color(255, 255, 255));

        jButtonDeshacer.setText("Deshacer");
        jButtonDeshacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeshacerActionPerformed(evt);
            }
        });

        jButtonComprobar.setText("Comprobar");

        jButtonRehacer.setText("Rehacer");
        jButtonRehacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRehacerActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanelOpcionesLayout = new javax.swing.GroupLayout(jPanelOpciones);
        jPanelOpciones.setLayout(jPanelOpcionesLayout);
        jPanelOpcionesLayout.setHorizontalGroup(
            jPanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOpcionesLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jButtonDeshacer)
                .addGap(164, 164, 164)
                .addComponent(jButtonComprobar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonRehacer)
                .addGap(38, 38, 38))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanelOpcionesLayout.setVerticalGroup(
            jPanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOpcionesLayout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDeshacer)
                    .addComponent(jButtonComprobar)
                    .addComponent(jButtonRehacer))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelOpciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanelOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jText1Region1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText1Region1KeyTyped

        //condicion para eliminar la accion digitada
        if (!Character.isDigit(evt.getKeyChar()) || jText1Region1.getText().length() == 1 || evt.getKeyChar() == '0') {
            evt.consume();
        }

        //condicion para almacer accion 
        if (jText1Region1.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                if (evaluarAccion(0, 0, "" + evt.getKeyChar())) {
                    //               TIPO ACCION - POSICION - VALOR
                    almacenarHistorial("INGRESAR VALOR", 0, 0, "" + evt.getKeyChar());
                    almacenarJugadaValida(this.jText1Region1, "" + evt.getKeyChar(), 0, 0);

                } else {
                    evt.consume();
                }

            }
        }
    }//GEN-LAST:event_jText1Region1KeyTyped

    private void jText2Region1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText2Region1KeyTyped
        //condicion para eliminar la accion digitada
        if (!Character.isDigit(evt.getKeyChar()) || jText2Region1.getText().length() == 1 || evt.getKeyChar() == '0') {
            evt.consume();
        }

        //condicion para almacer accion 
        if (jText2Region1.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                if (evaluarAccion(0, 1, "" + evt.getKeyChar())) {
                    //               TIPO ACCION - POSICION - VALOR
                    almacenarHistorial("INGRESAR VALOR", 0, 1, "" + evt.getKeyChar());
                    almacenarJugadaValida(this.jText2Region1, "" + evt.getKeyChar(), 0, 1);

                } else {
                    evt.consume();
                }

            }
        }
    }//GEN-LAST:event_jText2Region1KeyTyped

    private void jText3Region1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText3Region1KeyTyped

        //condicion para eliminar la accion digitada
        if (!Character.isDigit(evt.getKeyChar()) || jText3Region1.getText().length() == 1 || evt.getKeyChar() == '0') {
            evt.consume();
        }

        //condicion para almacer accion 
        if (jText3Region1.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                if (evaluarAccion(0, 2, "" + evt.getKeyChar())) {
                    //               TIPO ACCION - POSICION - VALOR
                    almacenarHistorial("INGRESAR VALOR", 0, 2, "" + evt.getKeyChar());
                    almacenarJugadaValida(this.jText3Region1, "" + evt.getKeyChar(), 0, 2);

                } else {
                    evt.consume();
                }

            }
        }
    }//GEN-LAST:event_jText3Region1KeyTyped

    private void jText4Region1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText4Region1KeyTyped
        //condicion para eliminar la accion digitada
        if (!Character.isDigit(evt.getKeyChar()) || jText4Region1.getText().length() == 1 || evt.getKeyChar() == '0') {
            evt.consume();
        }

        //condicion para almacer accion 
        if (jText4Region1.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                if (evaluarAccion(1, 0, "" + evt.getKeyChar())) {
                    //               TIPO ACCION - POSICION - VALOR
                    almacenarHistorial("INGRESAR VALOR", 1, 0, "" + evt.getKeyChar());
                    almacenarJugadaValida(this.jText4Region1, "" + evt.getKeyChar(), 1, 0);

                } else {
                    evt.consume();
                }

            }
        }
    }//GEN-LAST:event_jText4Region1KeyTyped

    private void jText5Region1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText5Region1KeyTyped
        //condicion para eliminar la accion digitada
        if (!Character.isDigit(evt.getKeyChar()) || jText5Region1.getText().length() == 1 || evt.getKeyChar() == '0') {
            evt.consume();
        }

        //condicion para almacer accion 
        if (jText5Region1.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                if (evaluarAccion(1, 1, "" + evt.getKeyChar())) {
                    //                 TIPO ACCION - POSICION - VALOR
                    almacenarHistorial("INGRESAR VALOR", 1, 1, "" + evt.getKeyChar());
                    almacenarJugadaValida(this.jText5Region1, "" + evt.getKeyChar(), 1, 1);

                } else {
                    evt.consume();
                }

            }
        }
    }//GEN-LAST:event_jText5Region1KeyTyped

    private void jText6Region1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText6Region1KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText6Region1.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }

        //condicion para almacer accion en la pila
        if (jText6Region1.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText6Region1, "" + evt.getKeyChar());

            } else if (jText6Region1.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText6Region1KeyTyped

    private void jText7Region1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText7Region1KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText7Region1.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }

        //condicion para almacer accion en la pila
        if (jText7Region1.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText7Region1, "" + evt.getKeyChar());

            } else if (jText7Region1.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText7Region1KeyTyped

    private void jText8Region1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText8Region1KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText8Region1.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }

        //condicion para almacer accion en la pila
        if (jText8Region1.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText8Region1, "" + evt.getKeyChar());

            } else if (jText8Region1.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText8Region1KeyTyped

    private void jText9Region1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText9Region1KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText9Region1.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText9Region1.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText9Region1, "" + evt.getKeyChar());

            } else if (jText9Region1.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText9Region1KeyTyped

    private void jText1Region2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText1Region2KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText1Region2.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText1Region2.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText1Region2, "" + evt.getKeyChar());

            } else if (jText1Region2.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText1Region2KeyTyped

    private void jText2Region2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText2Region2KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText2Region2.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText2Region2.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText2Region2, "" + evt.getKeyChar());

            } else if (jText2Region2.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText2Region2KeyTyped

    private void jText3Region2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText3Region2KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText3Region2.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText3Region2.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText3Region2, "" + evt.getKeyChar());

            } else if (jText3Region2.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText3Region2KeyTyped

    private void jText4Region2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText4Region2KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText4Region2.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText4Region2.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText4Region2, "" + evt.getKeyChar());

            } else if (jText4Region2.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText4Region2KeyTyped

    private void jText5Region2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText5Region2KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText5Region2.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText5Region2.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText5Region2, "" + evt.getKeyChar());

            } else if (jText5Region2.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText5Region2KeyTyped

    private void jText6Region2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText6Region2KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText6Region2.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText6Region2.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText6Region2, "" + evt.getKeyChar());

            } else if (jText6Region2.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText6Region2KeyTyped

    private void jText7Region2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText7Region2KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText7Region2.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText7Region2.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText7Region2, "" + evt.getKeyChar());

            } else if (jText7Region2.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText7Region2KeyTyped

    private void jText8Region2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText8Region2KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText8Region2.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText8Region2.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                if (evaluarAccion(2, 4, "" + evt.getKeyChar())) {
                    almacenarAccionDeshacer(this.jText8Region2, "" + evt.getKeyChar());
                } else {
                    evt.consume();
                }

            } else if (jText8Region2.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText8Region2KeyTyped

    private void jText9Region2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText9Region2KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText9Region2.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText9Region2.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                if (evaluarAccion(2, 5, "" + evt.getKeyChar())) {
                    almacenarAccionDeshacer(this.jText9Region2, "" + evt.getKeyChar());
                } else {
                    evt.consume();
                }

            } else if (jText9Region2.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText9Region2KeyTyped

    private void jText1Region3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText1Region3KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText1Region3.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText1Region3.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText1Region3, "" + evt.getKeyChar());

            } else if (jText1Region3.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText1Region3KeyTyped

    private void jText2Region3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText2Region3KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText2Region3.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText2Region3.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText2Region3, "" + evt.getKeyChar());

            } else if (jText2Region3.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText2Region3KeyTyped

    private void jText3Region3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText3Region3KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText3Region3.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText3Region3.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText3Region3, "" + evt.getKeyChar());

            } else if (jText3Region3.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText3Region3KeyTyped

    private void jText4Region3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText4Region3KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText4Region3.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText4Region3.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText4Region3, "" + evt.getKeyChar());

            } else if (jText4Region3.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText4Region3KeyTyped

    private void jText5Region3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText5Region3KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText5Region3.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText5Region3.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText5Region3, "" + evt.getKeyChar());

            } else if (jText5Region3.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText5Region3KeyTyped

    private void jText6Region3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText6Region3KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText6Region3.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText6Region3.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText6Region3, "" + evt.getKeyChar());

            } else if (jText6Region3.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText6Region3KeyTyped

    private void jText7Region3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText7Region3KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText7Region3.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText7Region3.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                if (evaluarAccion(2, 6, "" + evt.getKeyChar())) {
                    almacenarAccionDeshacer(this.jText7Region3, "" + evt.getKeyChar());

                } else {
                    evt.consume();
                }
                almacenarAccionDeshacer(this.jText7Region3, "" + evt.getKeyChar());

            } else if (jText7Region3.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText7Region3KeyTyped

    private void jText8Region3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText8Region3KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText8Region3.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText8Region3.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText8Region3, "" + evt.getKeyChar());

            } else if (jText8Region3.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText8Region3KeyTyped

    private void jText9Region3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText9Region3KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText9Region3.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText9Region3.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                if (evaluarAccion(2, 8, "" + evt.getKeyChar())) {
                    almacenarAccionDeshacer(this.jText9Region3, "" + evt.getKeyChar());
                } else {
                    evt.consume();
                }

            } else if (jText9Region3.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText9Region3KeyTyped

    private void jText1Region4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText1Region4KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText1Region4.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText1Region4.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText1Region4, "" + evt.getKeyChar());

            } else if (jText1Region4.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText1Region4KeyTyped

    private void jText2Region4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText2Region4KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText2Region4.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText2Region4.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText2Region4, "" + evt.getKeyChar());

            } else if (jText2Region4.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText2Region4KeyTyped

    private void jText3Region4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText3Region4KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText3Region4.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText3Region4.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText3Region4, "" + evt.getKeyChar());

            } else if (jText3Region4.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText3Region4KeyTyped

    private void jText4Region4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText4Region4KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText4Region4.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText4Region4.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText4Region4, "" + evt.getKeyChar());

            } else if (jText4Region4.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText4Region4KeyTyped

    private void jText5Region4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText5Region4KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText5Region4.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText5Region4.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText5Region4, "" + evt.getKeyChar());

            } else if (jText5Region4.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText5Region4KeyTyped

    private void jText6Region4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText6Region4KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText6Region4.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        } //condicion para almacer accion en la pila
        if (jText6Region4.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText6Region4, "" + evt.getKeyChar());

            } else if (jText6Region4.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText6Region4KeyTyped

    private void jText7Region4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText7Region4KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText7Region4.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText7Region4.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText7Region4, "" + evt.getKeyChar());

            } else if (jText7Region4.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText7Region4KeyTyped

    private void jText8Region4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText8Region4KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText8Region4.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText8Region4.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText8Region4, "" + evt.getKeyChar());

            } else if (jText8Region4.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText8Region4KeyTyped

    private void jText9Region4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText9Region4KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText9Region4.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText9Region4.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText9Region4, "" + evt.getKeyChar());

            } else if (jText9Region4.getText().equals("")) {
                System.out.println("es vacio");
            }
        }

    }//GEN-LAST:event_jText9Region4KeyTyped

    private void jText1Region5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText1Region5KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText1Region5.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText1Region5.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText1Region5, "" + evt.getKeyChar());

            } else if (jText1Region5.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText1Region5KeyTyped

    private void jText2Region5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText2Region5KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText2Region5.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText2Region5.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText2Region5, "" + evt.getKeyChar());

            } else if (jText2Region5.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText2Region5KeyTyped

    private void jText3Region5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText3Region5KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText3Region5.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText3Region5.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText3Region5, "" + evt.getKeyChar());

            } else if (jText3Region5.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText3Region5KeyTyped

    private void jText4Region5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText4Region5KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
        }
        if (jText4Region5.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText4Region5.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText4Region5, "" + evt.getKeyChar());

            } else if (jText4Region5.getText().equals("")) {
                System.out.println("es vacio");
            }

        }    }//GEN-LAST:event_jText4Region5KeyTyped

    private void jText5Region5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText5Region5KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText5Region5.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();

        }
        //condicion para almacer accion en la pila
        if (jText5Region5.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText5Region5, "" + evt.getKeyChar());

            } else if (jText5Region5.getText().equals("")) {
                System.out.println("es vacio");
            }

        }    }//GEN-LAST:event_jText5Region5KeyTyped

    private void jText6Region5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText6Region5KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText6Region5.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText6Region5.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText6Region5, "" + evt.getKeyChar());

            } else if (jText6Region5.getText().equals("")) {
                System.out.println("es vacio");
            }

        }    }//GEN-LAST:event_jText6Region5KeyTyped

    private void jText7Region5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText7Region5KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText7Region5.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText7Region5.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText7Region5, "" + evt.getKeyChar());

            } else if (jText7Region5.getText().equals("")) {
                System.out.println("es vacio");
            }

        }    }//GEN-LAST:event_jText7Region5KeyTyped

    private void jText8Region5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText8Region5KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText8Region5.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText8Region5.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText8Region5, "" + evt.getKeyChar());

            } else if (jText8Region5.getText().equals("")) {
                System.out.println("es vacio");
            }

        }    }//GEN-LAST:event_jText8Region5KeyTyped

    private void jText9Region5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText9Region5KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText9Region5.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText9Region5.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText9Region5, "" + evt.getKeyChar());

            } else if (jText9Region5.getText().equals("")) {
                System.out.println("es vacio");
            }

        }    }//GEN-LAST:event_jText9Region5KeyTyped

    private void jText1Region6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText1Region6KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText1Region6.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText1Region6.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText1Region6, "" + evt.getKeyChar());

            } else if (jText1Region6.getText().equals("")) {
                System.out.println("es vacio");
            }

        }

    }//GEN-LAST:event_jText1Region6KeyTyped

    private void jText2Region6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText2Region6KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText2Region6.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText2Region6.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText2Region6, "" + evt.getKeyChar());

            } else if (jText2Region6.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText2Region6KeyTyped

    private void jText3Region6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText3Region6KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText3Region6.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText3Region6.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText3Region6, "" + evt.getKeyChar());

            } else if (jText3Region6.getText().equals("")) {
                System.out.println("es vacio");
            }


        }    }//GEN-LAST:event_jText3Region6KeyTyped

    private void jText4Region6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText4Region6KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText4Region6.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText4Region6.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText4Region6, "" + evt.getKeyChar());

            } else if (jText4Region6.getText().equals("")) {
                System.out.println("es vacio");
            }

        }
    }//GEN-LAST:event_jText4Region6KeyTyped

    private void jText5Region6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText5Region6KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText5Region6.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText5Region6.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText5Region6, "" + evt.getKeyChar());

            } else if (jText5Region6.getText().equals("")) {
                System.out.println("es vacio");
            }

        }    }//GEN-LAST:event_jText5Region6KeyTyped

    private void jText6Region6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText6Region6KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText6Region6.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText6Region6.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText6Region6, "" + evt.getKeyChar());

            } else if (jText6Region6.getText().equals("")) {
                System.out.println("es vacio");
            }

        }
    }//GEN-LAST:event_jText6Region6KeyTyped

    private void jText7Region6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText7Region6KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText7Region6.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText7Region6.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText7Region6, "" + evt.getKeyChar());

            } else if (jText7Region6.getText().equals("")) {
                System.out.println("es vacio");
            }
        }    }//GEN-LAST:event_jText7Region6KeyTyped

    private void jText8Region6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText8Region6KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText8Region6.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText8Region6.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText8Region6, "" + evt.getKeyChar());

            } else if (jText8Region6.getText().equals("")) {
                System.out.println("es vacio");
            }
        }    }//GEN-LAST:event_jText8Region6KeyTyped

    private void jText9Region6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText9Region6KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText9Region6.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        } //condicion para almacer accion en la pila
        if (jText9Region6.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText9Region6, "" + evt.getKeyChar());

            } else if (jText9Region6.getText().equals("")) {
                System.out.println("es vacio");
            }
        }    }//GEN-LAST:event_jText9Region6KeyTyped

    private void jText1Region7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText1Region7KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText1Region7.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        } //condicion para almacer accion en la pila
        if (jText1Region7.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText1Region7, "" + evt.getKeyChar());

            } else if (jText1Region7.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText1Region7KeyTyped

    private void jText2Region7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText2Region7KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText2Region7.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText2Region7.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText2Region7, "" + evt.getKeyChar());

            } else if (jText2Region7.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText2Region7KeyTyped

    private void jText3Region7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText3Region7KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText3Region7.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText3Region7.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText3Region7, "" + evt.getKeyChar());

            } else if (jText3Region7.getText().equals("")) {
                System.out.println("es vacio");
            }

        }    }//GEN-LAST:event_jText3Region7KeyTyped

    private void jText4Region7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText4Region7KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText4Region7.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText4Region7.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText4Region7, "" + evt.getKeyChar());

            } else if (jText4Region7.getText().equals("")) {
                System.out.println("es vacio");
            }

        }    }//GEN-LAST:event_jText4Region7KeyTyped

    private void jText5Region7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText5Region7KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText5Region7.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText5Region7.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText5Region7, "" + evt.getKeyChar());

            } else if (jText5Region7.getText().equals("")) {
                System.out.println("es vacio");
            }
        }    }//GEN-LAST:event_jText5Region7KeyTyped

    private void jText6Region7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText6Region7KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText6Region7.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText6Region7.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText6Region7, "" + evt.getKeyChar());

            } else if (jText6Region7.getText().equals("")) {
                System.out.println("es vacio");
            }
        }    }//GEN-LAST:event_jText6Region7KeyTyped

    private void jText7Region7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText7Region7KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText8Region7.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText7Region7.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText7Region7, "" + evt.getKeyChar());

            } else if (jText7Region7.getText().equals("")) {
                System.out.println("es vacio");
            }
        }    }//GEN-LAST:event_jText7Region7KeyTyped

    private void jText8Region7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText8Region7KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText8Region7.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText8Region7.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText8Region7, "" + evt.getKeyChar());

            } else if (jText8Region7.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText8Region7KeyTyped

    private void jText9Region7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText9Region7KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText9Region7.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText9Region7.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText9Region7, "" + evt.getKeyChar());

            } else if (jText9Region7.getText().equals("")) {
                System.out.println("es vacio");
            }
        }    }//GEN-LAST:event_jText9Region7KeyTyped

    private void jText1Region8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText1Region8KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText1Region8.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText1Region8.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText1Region8, "" + evt.getKeyChar());

            } else if (jText1Region8.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText1Region8KeyTyped

    private void jText2Region8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText2Region8KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText2Region8.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText2Region8.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText2Region8, "" + evt.getKeyChar());

            } else if (jText2Region8.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText2Region8KeyTyped

    private void jText3Region8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText3Region8KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText3Region8.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText3Region8.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText3Region8, "" + evt.getKeyChar());

            } else if (jText3Region8.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText3Region8KeyTyped

    private void jText4Region8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText4Region8KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText4Region8.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText4Region8.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText4Region8, "" + evt.getKeyChar());

            } else if (jText4Region8.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText4Region8KeyTyped

    private void jText5Region8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText5Region8KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText5Region8.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText5Region8.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText5Region8, "" + evt.getKeyChar());

            } else if (jText5Region8.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText5Region8KeyTyped

    private void jText6Region8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText6Region8KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText6Region8.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText6Region8.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText6Region8, "" + evt.getKeyChar());

            } else if (jText6Region8.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText6Region8KeyTyped

    private void jText7Region8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText7Region8KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText7Region8.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText1Region8.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText1Region8, "" + evt.getKeyChar());

            } else if (jText1Region8.getText().equals("")) {
                System.out.println("es vacio");
            }
        }   //condicion para almacer accion en la pila
        if (jText7Region8.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText7Region8, "" + evt.getKeyChar());

            } else if (jText7Region8.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText7Region8KeyTyped

    private void jText8Region8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText8Region8KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText8Region8.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText8Region8.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText8Region8, "" + evt.getKeyChar());

            } else if (jText8Region8.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText8Region8KeyTyped

    private void jText9Region8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText9Region8KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText9Region8.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText9Region8.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText9Region8, "" + evt.getKeyChar());

            } else if (jText9Region8.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText9Region8KeyTyped

    private void jText1Region9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText1Region9KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText1Region9.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText1Region9.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText1Region9, "" + evt.getKeyChar());

            } else if (jText1Region9.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText1Region9KeyTyped

    private void jText2Region9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText2Region9KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText2Region9.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText2Region9.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText2Region9, "" + evt.getKeyChar());

            } else if (jText2Region9.getText().equals("")) {
                System.out.println("es vacio");
            }

        }    }//GEN-LAST:event_jText2Region9KeyTyped

    private void jText3Region9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText3Region9KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText3Region9.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText3Region9.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText3Region9, "" + evt.getKeyChar());

            } else if (jText3Region9.getText().equals("")) {
                System.out.println("es vacio");
            }

        }    }//GEN-LAST:event_jText3Region9KeyTyped

    private void jText4Region9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText4Region9KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText4Region9.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText4Region9.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText4Region9, "" + evt.getKeyChar());

            } else if (jText4Region9.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText4Region9KeyTyped

    private void jText5Region9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText5Region9KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText5Region9.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText5Region9.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText5Region9, "" + evt.getKeyChar());

            } else if (jText5Region9.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText5Region9KeyTyped

    private void jText6Region9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText6Region9KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText6Region9.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText6Region9.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText6Region9, "" + evt.getKeyChar());

            } else if (jText6Region9.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText6Region9KeyTyped

    private void jText7Region9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText7Region9KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText7Region9.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText7Region9.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText7Region9, "" + evt.getKeyChar());

            } else if (jText7Region9.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText7Region9KeyTyped

    private void jText8Region9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText8Region9KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText8Region9.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText8Region9.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText8Region9, "" + evt.getKeyChar());

            } else if (jText8Region9.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText8Region9KeyTyped

    private void jText9Region9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText9Region9KeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if (jText9Region9.getText().length() == 1) {
            evt.consume();
        }

        if (evt.getKeyChar() == '0') {
            evt.consume();
        }
        //condicion para almacer accion en la pila
        if (jText9Region9.getText().isEmpty()) {

            if (Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '0') {//almacenamos en la pila la accion que se realice

                almacenarAccionDeshacer(this.jText9Region9, "" + evt.getKeyChar());

            } else if (jText9Region9.getText().equals("")) {
                System.out.println("es vacio");
            }
        }
    }//GEN-LAST:event_jText9Region9KeyTyped

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(rootPane, "¿Desea terminar la partida?", "Informaicon", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);

        if (respuesta == JOptionPane.YES_OPTION) {
            new Menu().setVisible(true);
            this.dispose();
        }

    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButtonDeshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeshacerActionPerformed
        if (!deshacer.empty()) {

            var accion = deshacer.pop();
            rehacer.push(accion);//antes de deshacer una accion ponemos esa accion en la pila de rehacer
            accion.getCampo().setText("");
            almacenarHistorial("DESHACER", accion.getFila(), accion.getColumna(), accion.getValor());
        }

        if (deshacer.empty()) {
            System.out.println("Pila Deshacer vacia");
        }
    }//GEN-LAST:event_jButtonDeshacerActionPerformed

    private void jButtonRehacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRehacerActionPerformed
        // TODO add your handling code here:

        if (!rehacer.isEmpty()) {

            var accion = rehacer.pop();
            deshacer.push(accion);
            accion.getCampo().setText(accion.getValor());
            almacenarHistorial("REHACER", accion.getFila(), accion.getColumna(), accion.getValor());

        }

        if (rehacer.empty()) {
            System.out.println("Pila Rehacer vacia");
        }
    }//GEN-LAST:event_jButtonRehacerActionPerformed

    private void jButtonVerJugadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerJugadasActionPerformed
        // TODO add your handling code here:
        new Historial(this, true, historial).setVisible(true);
    }//GEN-LAST:event_jButtonVerJugadasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Sudoku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Sudoku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Sudoku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Sudoku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sudoku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonComprobar;
    private javax.swing.JButton jButtonDeshacer;
    private javax.swing.JButton jButtonRehacer;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JButton jButtonVerJugadas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelOpciones;
    private javax.swing.JPanel jPanelRegion1;
    private javax.swing.JPanel jPanelRegion2;
    private javax.swing.JPanel jPanelRegion3;
    private javax.swing.JPanel jPanelRegion4;
    private javax.swing.JPanel jPanelRegion5;
    private javax.swing.JPanel jPanelRegion6;
    private javax.swing.JPanel jPanelRegion7;
    private javax.swing.JPanel jPanelRegion8;
    private javax.swing.JPanel jPanelRegion9;
    private javax.swing.JPanel jPanelSudoku;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jText1Region1;
    private javax.swing.JTextField jText1Region2;
    private javax.swing.JTextField jText1Region3;
    private javax.swing.JTextField jText1Region4;
    private javax.swing.JTextField jText1Region5;
    private javax.swing.JTextField jText1Region6;
    private javax.swing.JTextField jText1Region7;
    private javax.swing.JTextField jText1Region8;
    private javax.swing.JTextField jText1Region9;
    private javax.swing.JTextField jText2Region1;
    private javax.swing.JTextField jText2Region2;
    private javax.swing.JTextField jText2Region3;
    private javax.swing.JTextField jText2Region4;
    private javax.swing.JTextField jText2Region5;
    private javax.swing.JTextField jText2Region6;
    private javax.swing.JTextField jText2Region7;
    private javax.swing.JTextField jText2Region8;
    private javax.swing.JTextField jText2Region9;
    private javax.swing.JTextField jText3Region1;
    private javax.swing.JTextField jText3Region2;
    private javax.swing.JTextField jText3Region3;
    private javax.swing.JTextField jText3Region4;
    private javax.swing.JTextField jText3Region5;
    private javax.swing.JTextField jText3Region6;
    private javax.swing.JTextField jText3Region7;
    private javax.swing.JTextField jText3Region8;
    private javax.swing.JTextField jText3Region9;
    private javax.swing.JTextField jText4Region1;
    private javax.swing.JTextField jText4Region2;
    private javax.swing.JTextField jText4Region3;
    private javax.swing.JTextField jText4Region4;
    private javax.swing.JTextField jText4Region5;
    private javax.swing.JTextField jText4Region6;
    private javax.swing.JTextField jText4Region7;
    private javax.swing.JTextField jText4Region8;
    private javax.swing.JTextField jText4Region9;
    private javax.swing.JTextField jText5Region1;
    private javax.swing.JTextField jText5Region2;
    private javax.swing.JTextField jText5Region3;
    private javax.swing.JTextField jText5Region4;
    private javax.swing.JTextField jText5Region5;
    private javax.swing.JTextField jText5Region6;
    private javax.swing.JTextField jText5Region7;
    private javax.swing.JTextField jText5Region8;
    private javax.swing.JTextField jText5Region9;
    private javax.swing.JTextField jText6Region1;
    private javax.swing.JTextField jText6Region2;
    private javax.swing.JTextField jText6Region3;
    private javax.swing.JTextField jText6Region4;
    private javax.swing.JTextField jText6Region5;
    private javax.swing.JTextField jText6Region6;
    private javax.swing.JTextField jText6Region7;
    private javax.swing.JTextField jText6Region8;
    private javax.swing.JTextField jText6Region9;
    private javax.swing.JTextField jText7Region1;
    private javax.swing.JTextField jText7Region2;
    private javax.swing.JTextField jText7Region3;
    private javax.swing.JTextField jText7Region4;
    private javax.swing.JTextField jText7Region5;
    private javax.swing.JTextField jText7Region6;
    private javax.swing.JTextField jText7Region7;
    private javax.swing.JTextField jText7Region8;
    private javax.swing.JTextField jText7Region9;
    private javax.swing.JTextField jText8Region1;
    private javax.swing.JTextField jText8Region2;
    private javax.swing.JTextField jText8Region3;
    private javax.swing.JTextField jText8Region4;
    private javax.swing.JTextField jText8Region5;
    private javax.swing.JTextField jText8Region6;
    private javax.swing.JTextField jText8Region7;
    private javax.swing.JTextField jText8Region8;
    private javax.swing.JTextField jText8Region9;
    private javax.swing.JTextField jText9Region1;
    private javax.swing.JTextField jText9Region2;
    private javax.swing.JTextField jText9Region3;
    private javax.swing.JTextField jText9Region4;
    private javax.swing.JTextField jText9Region5;
    private javax.swing.JTextField jText9Region6;
    private javax.swing.JTextField jText9Region7;
    private javax.swing.JTextField jText9Region8;
    private javax.swing.JTextField jText9Region9;
    // End of variables declaration//GEN-END:variables

    private void establecerPartida() {

        var x = "";
        var configuracion = obtenerConfiguracion();
        System.out.println(configuracion.toString());

        if (configuracion != null) {

            for (int i = 0; i < configuracion.size(); i++) {

                System.out.println("establecer fila:" + i + "\n"
                        + "Datos: " + configuracion.get(i));
                mostrarSudoko(configuracion.get(i), i);

            }
        } else {

            JOptionPane.showMessageDialog(rootPane, "No se encuentra el archivo de configuracion", "ERRROR", JOptionPane.ERROR_MESSAGE);
        }

    }

    public List<String> obtenerConfiguracion() {

        var configuracion = new ArrayList<String>();
        File archivo = new File(archivoConfigPartida);
        try {
            BufferedReader entrada = new BufferedReader(new FileReader(archivo));
            String lectura = entrada.readLine();
            while (lectura != null) {
                System.out.println("lectura = " + lectura);
                configuracion.add(lectura);
                lectura = entrada.readLine();

            }
            entrada.close();
            return configuracion;
        } catch (FileNotFoundException ex) {
            ex.printStackTrace(System.out);
        } catch (IOException ex) {
            ex.printStackTrace(System.out);
        }

        return null;

    }

    public void mostrarSudoko(String config, int fila) {

        switch (fila) {
            case 0:
                establecerFila1(config);
                break;
            case 1:
                establecerFila2(config);
                break;
            case 2:
                establecerFila3(config);
                break;
            case 3:
                establecerFila4(config);
                break;
            case 4:
                establecerFila5(config);
                break;
            case 5:
                establecerFila6(config);
                break;
            case 6:
                establecerFila7(config);
                break;
            case 7:
                establecerFila8(config);
                break;
            case 8:
                establecerFila9(config);
                break;

            default:
                break;
        }

    }

    public void establecerFila1(String fila) {

        var caracteres = fila.toCharArray();

        jText1Region1.setText(esNumero(caracteres[0]));
        jText2Region1.setText(esNumero(caracteres[1]));
        jText3Region1.setText(esNumero(caracteres[2]));
        jText1Region2.setText(esNumero(caracteres[3]));
        jText2Region2.setText(esNumero(caracteres[4]));
        jText3Region2.setText(esNumero(caracteres[5]));
        jText1Region3.setText(esNumero(caracteres[6]));
        jText2Region3.setText(esNumero(caracteres[7]));
        jText3Region3.setText(esNumero(caracteres[8]));

        agregarFilas(1);
        analizarModificacionFila1();
    }

    public void analizarModificacionFila1() {

        if (!jText1Region1.getText().equals("")) {
            jText1Region1.setEditable(false);

        }

        if (!jText2Region1.getText().equals("")) {
            jText2Region1.setEditable(false);

        }

        if (!jText3Region1.getText().equals("")) {
            jText3Region1.setEditable(false);

        }

        if (!jText1Region2.getText().equals("")) {
            jText1Region2.setEditable(false);

        }

        if (!jText2Region2.getText().equals("")) {
            jText2Region2.setEditable(false);

        }

        if (!jText3Region2.getText().equals("")) {
            jText3Region2.setEditable(false);

        }

        if (!jText1Region3.getText().equals("")) {
            jText1Region3.setEditable(false);

        }

        if (!jText2Region3.getText().equals("")) {
            jText2Region3.setEditable(false);

        }

        if (!jText3Region3.getText().equals("")) {
            jText3Region3.setEditable(false);

        }

    }

    public void establecerFila2(String fila) {

        var caracteres = fila.toCharArray();

        jText4Region1.setText(esNumero(caracteres[0]));
        jText5Region1.setText(esNumero(caracteres[1]));
        jText6Region1.setText(esNumero(caracteres[2]));
        jText4Region2.setText(esNumero(caracteres[3]));
        jText5Region2.setText(esNumero(caracteres[4]));
        jText6Region2.setText(esNumero(caracteres[5]));
        jText4Region3.setText(esNumero(caracteres[6]));
        jText5Region3.setText(esNumero(caracteres[7]));
        jText6Region3.setText(esNumero(caracteres[8]));
        agregarFilas(2);
        analizarModificacionFila2();
    }

    public void analizarModificacionFila2() {

        if (!jText4Region1.getText().equals("")) {
            jText4Region1.setEditable(false);

        }

        if (!jText5Region1.getText().equals("")) {
            jText5Region1.setEditable(false);

        }

        if (!jText6Region1.getText().equals("")) {
            jText6Region1.setEditable(false);

        }

        if (!jText4Region2.getText().equals("")) {
            jText4Region2.setEditable(false);

        }

        if (!jText5Region2.getText().equals("")) {
            jText5Region2.setEditable(false);

        }

        if (!jText6Region2.getText().equals("")) {
            jText6Region2.setEditable(false);

        }

        if (!jText4Region3.getText().equals("")) {
            jText4Region3.setEditable(false);

        }

        if (!jText5Region3.getText().equals("")) {
            jText5Region3.setEditable(false);

        }

        if (!jText6Region3.getText().equals("")) {
            jText6Region3.setEditable(false);

        }

    }

    public void establecerFila3(String fila) {

        var caracteres = fila.toCharArray();

        jText7Region1.setText(esNumero(caracteres[0]));
        System.out.println("caja 7 region 1:"
                + jText7Region1.getText());
        jText8Region1.setText(esNumero(caracteres[1]));
        jText9Region1.setText(esNumero(caracteres[2]));
        jText7Region2.setText(esNumero(caracteres[3]));
        jText8Region2.setText(esNumero(caracteres[4]));
        jText9Region2.setText(esNumero(caracteres[5]));
        jText7Region3.setText(esNumero(caracteres[6]));
        jText8Region3.setText(esNumero(caracteres[7]));
        jText9Region3.setText(esNumero(caracteres[8]));
        agregarFilas(3);
        analizarModificacionFila3();
    }

    public void analizarModificacionFila3() {

        if (!jText7Region1.getText().equals("")) {
            jText7Region1.setEditable(false);

        }

        if (!jText8Region1.getText().equals("")) {
            jText8Region1.setEditable(false);

        }

        if (!jText9Region1.getText().equals("")) {
            jText9Region1.setEditable(false);

        }

        if (!jText7Region2.getText().equals("")) {
            jText7Region2.setEditable(false);

        }

        if (!jText8Region2.getText().equals("")) {
            jText8Region2.setEditable(false);

        }

        if (!jText9Region2.getText().equals("")) {
            jText9Region2.setEditable(false);

        }

        if (!jText7Region3.getText().equals("")) {
            jText7Region3.setEditable(false);

        }

        if (!jText8Region3.getText().equals("")) {
            jText8Region3.setEditable(false);

        }

        if (!jText9Region3.getText().equals("")) {
            jText9Region3.setEditable(false);

        }

    }

    public void establecerFila4(String fila) {

        var caracteres = fila.toCharArray();

        jText1Region4.setText(esNumero(caracteres[0]));
        jText2Region4.setText(esNumero(caracteres[1]));
        jText3Region4.setText(esNumero(caracteres[2]));
        jText1Region5.setText(esNumero(caracteres[3]));
        jText2Region5.setText(esNumero(caracteres[4]));
        jText3Region5.setText(esNumero(caracteres[5]));
        jText1Region6.setText(esNumero(caracteres[6]));
        jText2Region6.setText(esNumero(caracteres[7]));
        jText3Region6.setText(esNumero(caracteres[8]));
        agregarFilas(4);
        analizarModificacionFila4();
    }

    public void analizarModificacionFila4() {

        if (!jText1Region4.getText().equals("")) {
            jText1Region4.setEditable(false);

        }

        if (!jText2Region4.getText().equals("")) {
            jText2Region4.setEditable(false);

        }

        if (!jText3Region4.getText().equals("")) {
            jText3Region4.setEditable(false);

        }

        if (!jText1Region5.getText().equals("")) {
            jText1Region5.setEditable(false);

        }

        if (!jText2Region5.getText().equals("")) {
            jText2Region5.setEditable(false);

        }

        if (!jText3Region5.getText().equals("")) {
            jText3Region5.setEditable(false);

        }

        if (!jText1Region6.getText().equals("")) {
            jText1Region6.setEditable(false);

        }

        if (!jText2Region6.getText().equals("")) {
            jText2Region6.setEditable(false);

        }

        if (!jText3Region6.getText().equals("")) {
            jText3Region6.setEditable(false);

        }

    }

    public void establecerFila5(String fila) {

        var caracteres = fila.toCharArray();

        jText4Region4.setText(esNumero(caracteres[0]));
        jText5Region4.setText(esNumero(caracteres[1]));
        jText6Region4.setText(esNumero(caracteres[2]));
        jText4Region5.setText(esNumero(caracteres[3]));
        jText5Region5.setText(esNumero(caracteres[4]));
        jText6Region5.setText(esNumero(caracteres[5]));
        jText4Region6.setText(esNumero(caracteres[6]));
        jText5Region6.setText(esNumero(caracteres[7]));
        jText6Region6.setText(esNumero(caracteres[8]));
        agregarFilas(5);
        analizarModificacionFila5();
    }

    public void analizarModificacionFila5() {

        if (!jText4Region4.getText().equals("")) {
            jText4Region4.setEditable(false);

        }

        if (!jText5Region4.getText().equals("")) {
            jText5Region4.setEditable(false);

        }

        if (!jText6Region4.getText().equals("")) {
            jText6Region4.setEditable(false);

        }

        if (!jText4Region5.getText().equals("")) {
            jText4Region5.setEditable(false);

        }

        if (!jText5Region5.getText().equals("")) {
            jText5Region5.setEditable(false);

        }

        if (!jText6Region5.getText().equals("")) {
            jText6Region5.setEditable(false);

        }

        if (!jText4Region6.getText().equals("")) {
            jText4Region6.setEditable(false);

        }

        if (!jText5Region6.getText().equals("")) {
            jText5Region6.setEditable(false);

        }

        if (!jText6Region6.getText().equals("")) {
            jText6Region6.setEditable(false);

        }

    }

    public void establecerFila6(String fila) {

        var caracteres = fila.toCharArray();

        jText7Region4.setText(esNumero(caracteres[0]));
        jText8Region4.setText(esNumero(caracteres[1]));
        jText9Region4.setText(esNumero(caracteres[2]));
        jText7Region5.setText(esNumero(caracteres[3]));
        jText8Region5.setText(esNumero(caracteres[4]));
        jText9Region5.setText(esNumero(caracteres[5]));
        jText7Region6.setText(esNumero(caracteres[6]));
        jText8Region6.setText(esNumero(caracteres[7]));
        jText9Region6.setText(esNumero(caracteres[8]));
        agregarFilas(6);
        analizarModificacionFila6();
    }

    public void analizarModificacionFila6() {

        if (!jText7Region4.getText().equals("")) {
            jText7Region4.setEditable(false);

        }

        if (!jText8Region4.getText().equals("")) {
            jText8Region4.setEditable(false);

        }

        if (!jText9Region4.getText().equals("")) {
            jText9Region4.setEditable(false);

        }

        if (!jText7Region5.getText().equals("")) {
            jText7Region5.setEditable(false);

        }

        if (!jText8Region5.getText().equals("")) {
            jText8Region5.setEditable(false);

        }

        if (!jText9Region5.getText().equals("")) {
            jText9Region5.setEditable(false);

        }

        if (!jText7Region6.getText().equals("")) {
            jText7Region6.setEditable(false);

        }

        if (!jText8Region6.getText().equals("")) {
            jText8Region6.setEditable(false);

        }

        if (!jText9Region6.getText().equals("")) {
            jText9Region6.setEditable(false);

        }

    }

    public void establecerFila7(String fila) {

        var caracteres = fila.toCharArray();

        jText1Region7.setText(esNumero(caracteres[0]));
        jText2Region7.setText(esNumero(caracteres[1]));
        jText3Region7.setText(esNumero(caracteres[2]));
        jText1Region8.setText(esNumero(caracteres[3]));
        jText2Region8.setText(esNumero(caracteres[4]));
        jText3Region8.setText(esNumero(caracteres[5]));
        jText1Region9.setText(esNumero(caracteres[6]));
        jText2Region9.setText(esNumero(caracteres[7]));
        jText3Region9.setText(esNumero(caracteres[8]));
        agregarFilas(7);
        analizarModificacionFila7();
    }

    public void analizarModificacionFila7() {

        if (!jText1Region7.getText().equals("")) {
            jText1Region7.setEditable(false);

        }

        if (!jText2Region7.getText().equals("")) {
            jText2Region7.setEditable(false);

        }

        if (!jText3Region7.getText().equals("")) {
            jText3Region7.setEditable(false);

        }

        if (!jText1Region8.getText().equals("")) {
            jText1Region8.setEditable(false);

        }

        if (!jText2Region8.getText().equals("")) {
            jText2Region8.setEditable(false);

        }

        if (!jText3Region8.getText().equals("")) {
            jText3Region8.setEditable(false);

        }

        if (!jText1Region9.getText().equals("")) {
            jText1Region9.setEditable(false);

        }

        if (!jText2Region9.getText().equals("")) {
            jText2Region9.setEditable(false);

        }

        if (!jText3Region9.getText().equals("")) {
            jText3Region9.setEditable(false);

        }

    }

    public void establecerFila8(String fila) {

        var caracteres = fila.toCharArray();

        jText4Region7.setText(esNumero(caracteres[0]));
        jText5Region7.setText(esNumero(caracteres[1]));
        jText6Region7.setText(esNumero(caracteres[2]));
        jText4Region8.setText(esNumero(caracteres[3]));
        jText5Region8.setText(esNumero(caracteres[4]));
        jText6Region8.setText(esNumero(caracteres[5]));
        jText4Region9.setText(esNumero(caracteres[6]));
        jText5Region9.setText(esNumero(caracteres[7]));
        jText6Region9.setText(esNumero(caracteres[8]));
        agregarFilas(8);
        analizarModificacionFila8();
    }

    public void analizarModificacionFila8() {

        if (!jText4Region7.getText().equals("")) {
            jText4Region7.setEditable(false);

        }

        if (!jText5Region7.getText().equals("")) {
            jText5Region7.setEditable(false);

        }

        if (!jText6Region7.getText().equals("")) {
            jText6Region7.setEditable(false);

        }

        if (!jText4Region8.getText().equals("")) {
            jText4Region8.setEditable(false);

        }

        if (!jText5Region8.getText().equals("")) {
            jText5Region8.setEditable(false);

        }

        if (!jText6Region8.getText().equals("")) {
            jText6Region8.setEditable(false);

        }

        if (!jText4Region9.getText().equals("")) {
            jText4Region9.setEditable(false);

        }

        if (!jText5Region9.getText().equals("")) {
            jText5Region9.setEditable(false);

        }

        if (!jText6Region9.getText().equals("")) {
            jText6Region9.setEditable(false);

        }

    }

    public void establecerFila9(String fila) {

        var caracteres = fila.toCharArray();

        jText7Region7.setText(esNumero(caracteres[0]));
        jText8Region7.setText(esNumero(caracteres[1]));
        jText9Region7.setText(esNumero(caracteres[2]));
        jText7Region8.setText(esNumero(caracteres[3]));
        jText8Region8.setText(esNumero(caracteres[4]));
        jText9Region8.setText(esNumero(caracteres[5]));
        jText7Region9.setText(esNumero(caracteres[6]));
        jText8Region9.setText(esNumero(caracteres[7]));
        jText9Region9.setText(esNumero(caracteres[8]));
        agregarFilas(9);
        analizarModificacionFila9();
    }

    public void analizarModificacionFila9() {

        if (!jText7Region7.getText().equals("")) {
            jText7Region7.setEditable(false);

        }

        if (!jText8Region7.getText().equals("")) {
            jText8Region7.setEditable(false);

        }

        if (!jText9Region7.getText().equals("")) {
            jText9Region7.setEditable(false);

        }

        if (!jText7Region8.getText().equals("")) {
            jText7Region8.setEditable(false);

        }

        if (!jText8Region8.getText().equals("")) {
            jText8Region8.setEditable(false);

        }

        if (!jText9Region8.getText().equals("")) {
            jText9Region8.setEditable(false);

        }

        if (!jText7Region9.getText().equals("")) {
            jText7Region9.setEditable(false);

        }

        if (!jText8Region9.getText().equals("")) {
            jText8Region9.setEditable(false);

        }

        if (!jText9Region9.getText().equals("")) {
            jText9Region9.setEditable(false);

        }

    }

    public String esNumero(char c) {

        if (Character.isDigit(c)) {
            return "" + c;
        } else {

            return "";
        }

    }

    private void almacenarJugadaValida(JTextField campo, String valor, int fila, int columna) {
        Accion a = new Accion(campo, valor, fila, columna);
        deshacer.push(a);//almacenamos en la pila deshacer la jugada valida
        verificarPartida();

        System.out.println(deshacer.toString());//mostramos el estado de la pila
    }

    private void agregarFilas(int fila) {

        switch (fila) {
            case 1:
                agregarFila1();
                break;
            case 2:
                agregarFila2();
                break;
            case 3:
                agregarFila3();
                break;
            case 4:
                agregarFila4();
                break;
            case 5:
                agregarFila5();
                break;
            case 6:
                agregarFila6();
                break;
            case 7:
                agregarFila7();
                break;
            case 8:
                agregarFila8();
                break;
            case 9:
                agregarFila9();
                break;
            default:
                break;
        }
    }

    private void agregarFila1() {

        sudokuPartida[0][0] = jText1Region1.getText();
        sudokuPartida[0][1] = jText2Region1.getText();
        sudokuPartida[0][2] = jText3Region1.getText();
        sudokuPartida[0][3] = jText1Region2.getText();
        sudokuPartida[0][4] = jText2Region2.getText();
        sudokuPartida[0][5] = jText3Region2.getText();
        sudokuPartida[0][6] = jText1Region3.getText();
        sudokuPartida[0][7] = jText2Region3.getText();
        sudokuPartida[0][8] = jText3Region3.getText();

        imprmirSudoku();
    }

    public void imprmirSudoku() {

        for (int f = 0; f < sudokuPartida.length; f++) {
            for (int c = 0; c < sudokuPartida[0].length; c++) {
                System.out.println("\nsudoku [" + f + "]" + "[" + c + "]:"
                        + sudokuPartida[f][c]);
            }
        }

    }

    private void agregarFila2() {
        sudokuPartida[1][0] = jText4Region1.getText();
        sudokuPartida[1][1] = jText5Region1.getText();
        sudokuPartida[1][2] = jText6Region1.getText();
        sudokuPartida[1][3] = jText4Region2.getText();
        sudokuPartida[1][4] = jText5Region2.getText();
        sudokuPartida[1][5] = jText6Region2.getText();
        sudokuPartida[1][6] = jText4Region3.getText();
        sudokuPartida[1][7] = jText5Region3.getText();
        sudokuPartida[1][8] = jText6Region3.getText();

        imprmirSudoku();
    }

    private void agregarFila3() {
        sudokuPartida[2][0] = jText7Region1.getText();
        sudokuPartida[2][1] = jText8Region1.getText();
        sudokuPartida[2][2] = jText9Region1.getText();
        sudokuPartida[2][3] = jText7Region2.getText();
        sudokuPartida[2][4] = jText8Region2.getText();
        sudokuPartida[2][5] = jText9Region2.getText();
        sudokuPartida[2][6] = jText7Region3.getText();
        sudokuPartida[2][7] = jText8Region3.getText();
        sudokuPartida[2][8] = jText9Region3.getText();

        imprmirSudoku();
    }

    private void agregarFila4() {
        sudokuPartida[3][0] = jText1Region4.getText();
        sudokuPartida[3][1] = jText2Region4.getText();
        sudokuPartida[3][2] = jText3Region4.getText();
        sudokuPartida[3][3] = jText1Region5.getText();
        sudokuPartida[3][4] = jText2Region5.getText();
        sudokuPartida[3][5] = jText3Region5.getText();
        sudokuPartida[3][6] = jText1Region6.getText();
        sudokuPartida[3][7] = jText2Region6.getText();
        sudokuPartida[3][8] = jText3Region6.getText();

        imprmirSudoku();
    }

    private void agregarFila5() {
        sudokuPartida[4][0] = jText4Region4.getText();
        sudokuPartida[4][1] = jText5Region4.getText();
        sudokuPartida[4][2] = jText6Region4.getText();
        sudokuPartida[4][3] = jText4Region5.getText();
        sudokuPartida[4][4] = jText5Region5.getText();
        sudokuPartida[4][5] = jText6Region5.getText();
        sudokuPartida[4][6] = jText4Region6.getText();
        sudokuPartida[4][7] = jText5Region6.getText();
        sudokuPartida[4][8] = jText6Region6.getText();

        imprmirSudoku();

    }

    private void agregarFila6() {
        sudokuPartida[5][0] = jText7Region4.getText();
        sudokuPartida[5][1] = jText8Region4.getText();
        sudokuPartida[5][2] = jText9Region4.getText();
        sudokuPartida[5][3] = jText7Region5.getText();
        sudokuPartida[5][4] = jText8Region5.getText();
        sudokuPartida[5][5] = jText9Region5.getText();
        sudokuPartida[5][6] = jText7Region6.getText();
        sudokuPartida[5][7] = jText8Region6.getText();
        sudokuPartida[5][8] = jText9Region6.getText();

        imprmirSudoku();
    }

    private void agregarFila7() {
        sudokuPartida[6][0] = jText1Region7.getText();
        sudokuPartida[6][1] = jText2Region7.getText();
        sudokuPartida[6][2] = jText3Region7.getText();
        sudokuPartida[6][3] = jText1Region8.getText();
        sudokuPartida[6][4] = jText2Region8.getText();
        sudokuPartida[6][5] = jText3Region8.getText();
        sudokuPartida[6][6] = jText1Region9.getText();
        sudokuPartida[6][7] = jText2Region9.getText();
        sudokuPartida[6][8] = jText3Region9.getText();

        imprmirSudoku();
    }

    private void agregarFila8() {
        sudokuPartida[7][0] = jText4Region7.getText();
        sudokuPartida[7][1] = jText5Region7.getText();
        sudokuPartida[7][2] = jText6Region7.getText();
        sudokuPartida[7][3] = jText4Region8.getText();
        sudokuPartida[7][4] = jText5Region8.getText();
        sudokuPartida[7][5] = jText6Region8.getText();
        sudokuPartida[7][6] = jText4Region9.getText();
        sudokuPartida[7][7] = jText5Region9.getText();
        sudokuPartida[7][8] = jText6Region9.getText();

        imprmirSudoku();
    }

    private void agregarFila9() {
        sudokuPartida[8][0] = jText7Region7.getText();
        sudokuPartida[8][1] = jText8Region7.getText();
        sudokuPartida[8][2] = jText9Region7.getText();
        sudokuPartida[8][3] = jText7Region8.getText();
        sudokuPartida[8][4] = jText8Region8.getText();
        sudokuPartida[8][5] = jText9Region8.getText();
        sudokuPartida[8][6] = jText7Region9.getText();
        sudokuPartida[8][7] = jText8Region9.getText();
        sudokuPartida[8][8] = jText9Region9.getText();

        imprmirSudoku();
    }

    private boolean evaluarAccion(int fila, int columna, String valor) {
        //evalua si una accion ingresada por el usuario es correcta evaluando el valor en la fila, columna y region
        if (evaluarFila(fila, valor) || evaluarColumna(columna, valor) || evaluarRegion(fila, columna, valor)) {
            return false;
        }
        return true;// si retorna true esta de manera correcta el valor
    }

    private boolean evaluarFila(int fila, String valor) {

        for (int c = 0; c < sudokuPartida[0].length; c++) {
            if (sudokuPartida[fila][c].equals(valor)) {//si es igual a cualquier valor de la fila
                JOptionPane.showMessageDialog(rootPane, "El valor " + valor + " ya se encuentra en la fila", "Error", JOptionPane.ERROR_MESSAGE);
                return true;
            }
        }
        return false;
    }

    private boolean evaluarColumna(int columna, String valor) {
        for (int f = 0; f < sudokuPartida.length; f++) {
            if (sudokuPartida[f][columna].equals(valor)) {//si es igual a cualquier valor de la fila
                JOptionPane.showMessageDialog(rootPane, "El valor " + valor + " ya se encuentra en la columna", "Error", JOptionPane.ERROR_MESSAGE);
                return true;
            }
        }
        return false;
    }

    private boolean evaluarRegion(int fila, int columna, String valor) {

        int posFila = fila - fila % 3;
        int posColumna = columna - columna % 3;

        System.out.println("pos fila=" + posFila);
        System.out.println("pos columna=" + posColumna);

        System.out.println("EVALUANDO REGION");
        for (int f = posFila; f < posFila + 3; f++) {
            for (int c = posColumna; c < posColumna + 3; c++) {
                System.out.println("dato en pos[" + f + "][" + c + "]=" + sudokuPartida[f][c] + " ¿es igual al valor?=" + valor);
                if (sudokuPartida[f][c].equals(valor)) {

                    JOptionPane.showMessageDialog(rootPane, "El valor " + valor + " ya se encuentra en la region", "Error", JOptionPane.ERROR_MESSAGE);
                    return true;

                }

            }
        }
        return false;
    }

    private void almacenarHistorial(String tipoAccion, int fila, int columna, String valor) {//almacena el historial de las jugadas

        historial.add(tipoAccion + " | " + " Fila: " + (fila + 1) + ", Columna: " + (columna + 1) + " |    " + valor);
    }

    private void verificarPartida() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
